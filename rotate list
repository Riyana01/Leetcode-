/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode* rotateRight(struct ListNode* head, int k) {
    if (!head)
        return head;
    struct ListNode* temp1 = head;
    int len = 0;
    while (temp1) {
        len++;
        temp1 = temp1->next;
    }
    k = k % len;
    if (k == 0)
        return head;

    struct ListNode* fast = head;
    struct ListNode* slow = head;

    for (int i = 0; i < k; i++) {
        fast = fast->next;
    }
    while (fast->next) {
        fast = fast->next;
        slow = slow->next;
    }

    struct ListNode* temp = slow->next;
    slow->next = NULL;
    fast->next = head;
    head = temp;

    return head;
}
